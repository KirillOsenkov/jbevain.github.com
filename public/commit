#!/usr/bin/env ruby

$author = "Jb Evain"
$mail = "jbevain@novell.com"
$editor = "scite"
$files = []
$message = nil
$tmp = "Message"
$keep_tmp = false
$clean = false

ARGV.each do |arg|
	if arg.index('-n:')
		$author = arg[3..-1]
	elsif arg.index('-a:')
		$mail = arg[3..-1]
	elsif arg.index('-m:')
		$message = arg[3..-1]
	elsif arg.index('-k')
		$keep_tmp = true
	elsif arg.index('-c')
		$clean = true
	elsif arg.index('--help')
		usage()
	elsif arg.index('--version')
		version()
	else
		$files << arg
	end
end

def get_file_list
	return $files.join(' ') if not $files.empty?
	return '.'
end

def printable_file_list
	return "\t*" if $files.empty?
	return $files.map { |file| "\t* #{file}\n" }.join
end

def svn(command, *args)
	system("svn #{command.to_s} #{args.join(' ')}")
end

def svnci(*args)
	svn :ci, args << get_file_list()
end

def quote(str)
	return "\"" << str << "\""
end

def read_file(file)
	content = ""
	f = File.new(file, File::CREAT | File::RDONLY)
	content << f.readlines.join
	f.close

	return content
end

def write_file(file, content)
	File.open(file, File::CREAT | File::WRONLY) { |f|
		f.write(content)
	}
end

def parse_status
	s = IO::popen("svn st")
	s.each { |line|
		$files << $1 if line =~ /^M\s*(.*)/
	}
	s.close
end

if $clean
	fl = get_file_list
	fl = "**/*" if fl == "."
	system("cleol #{fl}")
	system("clprop #{fl}")
end

if not $message.nil?
	svnci("-m", quote($message))
end

if $files.empty?
	parse_status()
end

log = """#{Time.new.strftime('%Y-%m-%d')}  #{$author}  <#{$mail}>

#{printable_file_list}
"""

write_file($tmp, log)

system("#{$editor} #{$tmp}")

changelog = read_file($tmp) << read_file("ChangeLog")

write_file("ChangeLog", changelog)

$files << "ChangeLog"

svnci("-F", $tmp)

File.delete($tmp) if not $keep_tmp
